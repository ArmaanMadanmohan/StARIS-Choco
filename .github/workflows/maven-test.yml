# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-solver:
    runs-on: ubuntu-latest
    # Tests matrix
    strategy:
      #fail-fast: false
      matrix:
        group: [ "1s", "10s", "checker", "ibex" ]

    # The different steps
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          #cache: 'maven'

      # Install Ibex
      - name: Install Ibex
        if: matrix.group == 'ibex'
        run: sh scripts/install-ibex.sh

      # Regression tests
      - name: Test ${{ matrix.group }}
        run: mvn -B --file pom.xml package -Pcoverage -DtestFailureIgnore=true -Dgroups=${{ matrix.group }}
  test-parser:
    needs: [ test-solver ]
    runs-on: ubuntu-latest
    # Tests matrix
    strategy:
      #fail-fast: false
      matrix:
        group: [ "xcsp", "dimacs", "mps" ]

    # The different steps
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          #cache: 'maven'

      # Regression tests
      - name: Test ${{ matrix.group }}
        run: mvn -B --file pom.xml package -Pcoverage -DtestFailureIgnore=true -Dgroups=${{ matrix.group }}

  test-mzn:
    needs: [ test-solver ]
    runs-on: ubuntu-latest
    # Tests matrix
    strategy:
      #fail-fast: false
      matrix:
        group: [ "mzn" ]

    # The different steps
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          #cache: 'maven'

      # Regression tests
      - name: Test ${{ matrix.group }}
        run: mvn -B --file pom.xml package -Pcoverage -DtestFailureIgnore=true -Dgroups=${{ matrix.group }}

  publish:
    #needs: [ test-solver ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Maven Release and Publish
        uses: mg-smartrent/github-actions-maven-release@v1.5
        with:
          git-release-bot-name: "cprudhom"
          git-release-bot-email: "charles.prudhomme@imt-atlantique.fr"
          release-branch-name: "master"
          access-token: ${GITHUB_TOKEN}

          gpg-enabled: "true"
          gpg-key-id: ${{ secrets.GPG_KEY_ID }}
          gpg-key: ${{ secrets.GPG_KEY }}

          maven-repo-server-id: ${{ secrets.MVN_REPO_PRIVATE_REPO }}
          maven-repo-server-username: ${{ secrets.MVN_REPO_PRIVATE_REPO_USER }}
          maven-repo-server-password: ${{ secrets.MVN_REPO_PRIVATE_REPO_PASSWORD }}
          maven-args: "javadoc:aggregate-jar source:jar -DskipTests"

          maven-release-args: "-DskipTests"
          maven-release-publish: true
          maven-snapshot-publish: true
          maven-publish-args: "-DskipTests"
          # javadoc:aggregate-jar source:jar